[project]
name = "finsight"
version = "1.1.0"
description = "AI-powered platform for comprehensive financial document analysis using sentiment analysis, NER, and structured information extraction"
readme = "README.md"
requires-python = ">=3.10,<3.14"
license = "MIT"
authors = [
    {name = "FinSight Team", email = "finsight@example.com"}
]
maintainers = [
    {name = "FinSight Team", email = "finsight@example.com"}
]
keywords = [
    "finance",
    "nlp",
    "sentiment-analysis",
    "named-entity-recognition",
    "document-analysis",
    "finbert",
    "ai",
    "machine-learning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Financial",
]

dependencies = [
    "fastapi==0.115.5",
    "uvicorn[standard]==0.32.1",
    "python-multipart==0.0.20",
    "docling==2.15.0",
    "transformers>=4.30.0,<5.0.0",
    "torch>=2.0.0,<3.0.0",
    "beautifulsoup4>=4.12.0,<5.0.0",
    "langextract>=0.1.0,<1.0.0",
    "httpx>=0.24.0,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "black>=23.0.0,<25.0.0",
    "ruff>=0.1.0,<1.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
]

[project.urls]
Homepage = "https://github.com/amalsalilan/Infosys-Springboard-Internship-FinanceInsight"
Repository = "https://github.com/amalsalilan/Infosys-Springboard-Internship-FinanceInsight"
Documentation = "https://github.com/amalsalilan/Infosys-Springboard-Internship-FinanceInsight/blob/main/README.md"
Changelog = "https://github.com/amalsalilan/Infosys-Springboard-Internship-FinanceInsight/blob/main/CHANGELOG.md"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["backend"]
package-dir = {"" = "."}

[tool.setuptools.package-data]
backend = ["py.typed"]

[dependency-groups]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "black>=23.0.0,<25.0.0",
    "ruff>=0.1.0,<1.0.0",
    "mypy>=1.0.0,<2.0.0",
]

[tool.uv.sources]

# Environment management
[tool.uv.pip]
index-url = "https://pypi.org/simple"

# Black configuration
[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | _build
  | build
  | dist
  | node_modules
  | output
  | __pycache__
)/
'''

# Ruff configuration
[tool.ruff]
line-length = 100
target-version = "py310"
extend-exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "node_modules",
    "output",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "docling.*",
    "langextract.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
